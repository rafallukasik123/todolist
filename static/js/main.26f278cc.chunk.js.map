{"version":3,"sources":["komponenty/Dodawanie.js","komponenty/Wyswietlanie.js","App.js","serviceWorker.js","index.js"],"names":["Dodawanie","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","onSubmit","submit","onChange","change","type","value","Component","Wyswietlanie","_this","createTask","bind","assertThisInitialized","item","_this2","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","houers","getHours","minute","getMinutes","key","tekst","defaultValue","onClick","usuwanie","listItems","result","map","App","handlechange","e","preventDefault","temp","target","now","setState","handleSubmit","state","tempTable","concat","toConsumableArray","tablica","deleteItem","filteredItems","filter","komponenty_Dodawanie","komponenty_Wyswietlanie","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26f278cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport '../Style/style.scss';\r\n\r\nclass Dodawanie extends Component {\r\nconstructor(props)\r\n{\r\n\r\n  super(props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n     <form className=\"dodawanie_form\" onSubmit={this.props.submit}>\r\n       <input onChange={this.props.change}  />\r\n      <input className=\"dodawanie_form--submit\" type=\"submit\" value=\"Submit\" />\r\n\r\n     </form>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default Dodawanie;","import React, { Component } from 'react';\r\nimport '../Style/style.scss';\r\n\r\n\r\nclass Wyswietlanie extends Component {\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.createTask=this.createTask.bind(this);\r\n}\r\n \r\n\r\n\r\n  createTask(item){\r\n\r\n    let today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); \r\n    const yyyy = today.getFullYear();\r\n    const houers = today.getHours();\r\n    const minute = today.getMinutes();\r\n    today = mm + ' ' + dd + ' ' + yyyy+ '  '+ houers + ':' + minute;\r\n    \r\n    \r\n    return  <li className=\"wyswietlanie_li\" key={item.key} >\r\n    <p className=\"wyswietlanie_li--wartosc\">{item.tekst} </p> \r\n    <p className=\"wyswietlanie_li--data\"> {today}</p>\r\n    <input className=\"wyswietlanie_li-button\" type=\"button\" defaultValue=\"usun\" onClick={() => this.props.usuwanie(item.key)} />\r\n  </li>\r\n  }\r\n\r\n  \r\n\r\n\r\n  render() {\r\n\r\n    \r\nconst table=this.props.result;\r\n  \r\nconst listItems=table.map(this.createTask);\r\n\r\n\r\n    return (\r\n     \r\n     <ul className=\"wyswietlanie_ulList\">{listItems}</ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wyswietlanie;","import React, { Component } from 'react';\r\n\r\nimport './Style/style.scss';\r\nimport Dodawanie from './komponenty/Dodawanie';\r\nimport Wyswietlanie from './komponenty/Wyswietlanie';\r\n\r\n\r\nclass App extends Component {\r\n \r\n constructor(){\r\n   super();\r\n  this.state={\r\n    item : {tekst : '', key: ''},\r\n    tablica : [],\r\n  }\r\n\r\n\r\n  this.handlechange=this.handlechange.bind(this);\r\n  this.handleSubmit=this.handleSubmit.bind(this);\r\n }\r\n \r\n handlechange =e=>{\r\n  e.preventDefault();\r\n \r\n  const temp= {tekst :e.target.value , key : Date.now()}\r\nthis.setState({\r\n  item: temp,\r\n})\r\n}\r\n\r\nhandleSubmit =e=>{\r\n  e.preventDefault();\r\n  const temp= {tekst : this.state.item.tekst , key : Date.now()};\r\n\r\n  let tempTable  = [...this.state.tablica,temp];\r\n\r\n  this.setState({\r\n    tablica: tempTable,\r\n    \r\n  })\r\n\r\n\r\n}\r\ndeleteItem = key => {\r\n\r\n\r\n  const filteredItems = this.state.tablica.filter(item => {\r\n    return item.key !== key\r\n  })\r\n  this.setState({\r\n    tablica: filteredItems,\r\n  })\r\n}\r\n\r\n\r\n  render() {\r\n\r\n   \r\n    return (\r\n      <div className=\"body\">\r\n      <Dodawanie className=\"dodawanie\" change={this.handlechange} submit={this.handleSubmit} />\r\n      <Wyswietlanie className=\"wyswietlanie\" result={this.state.tablica} usuwanie={this.deleteItem} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}